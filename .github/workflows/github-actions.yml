name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install flake8
      - run: flake8 .

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run tests
        run: python -m pytest --cov=recycling_manager --cov-report=term-missing -q

  docker:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/recycling-manager
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Discord Notifier
        if: always()
        uses: fateyan/action-discord-notifier@v1.2.0
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          username: "CI Bot ðŸ¤–"
          avatar_url: "https://raw.githubusercontent.com/github/explore/main/topics/github-actions/github-actions.png"
          description: |
            ðŸš€ **Build Docker finalizado!**
            â€¢ Status: **${{ job.status }}**
            â€¢ Branch: `${{ github.ref_name }}`
            â€¢ Commit: `${{ github.sha }}`
            â€¢ Tags: `${{ steps.meta.outputs.tags || 'sem tag' }}`
            â€¢ Autor: **${{ github.actor }}**
