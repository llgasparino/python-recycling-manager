name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install flake8
      - run: flake8 .

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run tests
        run: python -m pytest --cov=recycling_manager --cov-report=term-missing -q

      - name: Notify Discord
        if: always() # Roda sempre, independente de sucesso ou falha
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then
            echo "Webhook n√£o configurado. Pulando notifica√ß√£o."
            exit 0
          fi

          if [[ "${{ job.status }}" == "success" ]]; then
            STATUS_MSG="‚úÖ Sucesso"
            EMBED_COLOR=3066993 # Cor verde
          else
            STATUS_MSG="‚ùå Falha"
            EMBED_COLOR=15158332 # Cor vermelha
          fi

          COMMIT_URL="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
          ACTION_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          SHORT_SHA="${GITHUB_SHA::7}"

          read -r -d '' PAYLOAD << EOF
          {
            "embeds": [{
              "title": "$STATUS_MSG no reposit√≥rio ${{ github.repository }}",
              "url": "$ACTION_URL",
              "color": "$EMBED_COLOR",
              "fields": [
                {
                  "name": "Branch",
                  "value": "${{ github.ref_name }}",
                  "inline": true
                },
                {
                  "name": "Autor",
                  "value": "${{ github.actor }}",
                  "inline": true
                },
                {
                  "name": "Commit",
                  "value": "[\`$SHORT_SHA\`]($COMMIT_URL)"
                }
              ],
              "footer": {
                "text": "Workflow: ${{ github.workflow }}"
              },
              "timestamp": "$(date -u +'%Y-%m-%dT%H:%M:%S.000Z')"
            }]
          }
          EOF

          # 3. Envia a notifica√ß√£o usando cURL
          curl -H "Content-Type: application/json" -X POST \
            -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"

  docker:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/recycling-manager
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Notify Discord (success)
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then echo "Webhook n√£o configurado"; exit 0; fi
          STATUS_MSG="üöÄ Docker build publicado em ${GITHUB_REPOSITORY} (commit ${GITHUB_SHA::7})\nAutor: ${GITHUB_ACTOR}\nBranch: ${GITHUB_REF_NAME}\nTags: ${TAGS:-sem tag}"
          curl -H "Content-Type: application/json" -X POST \
            -d "{\"content\": \"$STATUS_MSG\"}" "$DISCORD_WEBHOOK_URL"
      - name: Notify Discord (failure)
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then echo "Webhook n√£o configurado"; exit 0; fi
          STATUS_MSG="‚ùå Docker build falhou em ${GITHUB_REPOSITORY} (commit ${GITHUB_SHA::7})\nAutor: ${GITHUB_ACTOR}\nBranch: ${GITHUB_REF_NAME}\nVer logs: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          curl -H "Content-Type: application/json" -X POST \
            -d "{\"content\": \"$STATUS_MSG\"}" "$DISCORD_WEBHOOK_URL"
